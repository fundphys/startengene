
startengene.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000014  00800100  00000756  000007ea  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000756  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000006  00800114  00800114  000007fe  2**0
                  ALLOC
  3 .stab         00002604  00000000  00000000  00000800  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      000014c4  00000000  00000000  00002e04  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	19 c0       	rjmp	.+50     	; 0x34 <__ctors_end>
   2:	33 c0       	rjmp	.+102    	; 0x6a <__bad_interrupt>
   4:	32 c0       	rjmp	.+100    	; 0x6a <__bad_interrupt>
   6:	31 c0       	rjmp	.+98     	; 0x6a <__bad_interrupt>
   8:	30 c0       	rjmp	.+96     	; 0x6a <__bad_interrupt>
   a:	2f c0       	rjmp	.+94     	; 0x6a <__bad_interrupt>
   c:	2e c0       	rjmp	.+92     	; 0x6a <__bad_interrupt>
   e:	2d c0       	rjmp	.+90     	; 0x6a <__bad_interrupt>
  10:	2c c0       	rjmp	.+88     	; 0x6a <__bad_interrupt>
  12:	2b c0       	rjmp	.+86     	; 0x6a <__bad_interrupt>
  14:	2a c0       	rjmp	.+84     	; 0x6a <__bad_interrupt>
  16:	29 c0       	rjmp	.+82     	; 0x6a <__bad_interrupt>
  18:	28 c0       	rjmp	.+80     	; 0x6a <__bad_interrupt>
  1a:	27 c0       	rjmp	.+78     	; 0x6a <__bad_interrupt>
  1c:	26 c0       	rjmp	.+76     	; 0x6a <__bad_interrupt>
  1e:	25 c0       	rjmp	.+74     	; 0x6a <__bad_interrupt>
  20:	24 c0       	rjmp	.+72     	; 0x6a <__bad_interrupt>
  22:	23 c0       	rjmp	.+70     	; 0x6a <__bad_interrupt>
  24:	22 c0       	rjmp	.+68     	; 0x6a <__bad_interrupt>
  26:	21 c0       	rjmp	.+66     	; 0x6a <__bad_interrupt>
  28:	20 c0       	rjmp	.+64     	; 0x6a <__bad_interrupt>
  2a:	1f c0       	rjmp	.+62     	; 0x6a <__bad_interrupt>
  2c:	1e c0       	rjmp	.+60     	; 0x6a <__bad_interrupt>
  2e:	1d c0       	rjmp	.+58     	; 0x6a <__bad_interrupt>
  30:	1c c0       	rjmp	.+56     	; 0x6a <__bad_interrupt>
  32:	1b c0       	rjmp	.+54     	; 0x6a <__bad_interrupt>

00000034 <__ctors_end>:
  34:	11 24       	eor	r1, r1
  36:	1f be       	out	0x3f, r1	; 63
  38:	cf ef       	ldi	r28, 0xFF	; 255
  3a:	d2 e0       	ldi	r29, 0x02	; 2
  3c:	de bf       	out	0x3e, r29	; 62
  3e:	cd bf       	out	0x3d, r28	; 61

00000040 <__do_copy_data>:
  40:	11 e0       	ldi	r17, 0x01	; 1
  42:	a0 e0       	ldi	r26, 0x00	; 0
  44:	b1 e0       	ldi	r27, 0x01	; 1
  46:	e6 e5       	ldi	r30, 0x56	; 86
  48:	f7 e0       	ldi	r31, 0x07	; 7
  4a:	02 c0       	rjmp	.+4      	; 0x50 <__do_copy_data+0x10>
  4c:	05 90       	lpm	r0, Z+
  4e:	0d 92       	st	X+, r0
  50:	a4 31       	cpi	r26, 0x14	; 20
  52:	b1 07       	cpc	r27, r17
  54:	d9 f7       	brne	.-10     	; 0x4c <__do_copy_data+0xc>

00000056 <__do_clear_bss>:
  56:	11 e0       	ldi	r17, 0x01	; 1
  58:	a4 e1       	ldi	r26, 0x14	; 20
  5a:	b1 e0       	ldi	r27, 0x01	; 1
  5c:	01 c0       	rjmp	.+2      	; 0x60 <.do_clear_bss_start>

0000005e <.do_clear_bss_loop>:
  5e:	1d 92       	st	X+, r1

00000060 <.do_clear_bss_start>:
  60:	aa 31       	cpi	r26, 0x1A	; 26
  62:	b1 07       	cpc	r27, r17
  64:	e1 f7       	brne	.-8      	; 0x5e <.do_clear_bss_loop>
  66:	68 d0       	rcall	.+208    	; 0x138 <main>
  68:	74 c3       	rjmp	.+1768   	; 0x752 <_exit>

0000006a <__bad_interrupt>:
  6a:	ca cf       	rjmp	.-108    	; 0x0 <__vectors>

0000006c <usart_putchar_printf>:
  6c:	8a 30       	cpi	r24, 0x0A	; 10
  6e:	49 f0       	breq	.+18     	; 0x82 <usart_putchar_printf+0x16>
  70:	90 91 c0 00 	lds	r25, 0x00C0
  74:	95 ff       	sbrs	r25, 5
  76:	fc cf       	rjmp	.-8      	; 0x70 <usart_putchar_printf+0x4>
  78:	80 93 c6 00 	sts	0x00C6, r24
  7c:	80 e0       	ldi	r24, 0x00	; 0
  7e:	90 e0       	ldi	r25, 0x00	; 0
  80:	08 95       	ret
  82:	90 91 c0 00 	lds	r25, 0x00C0
  86:	95 ff       	sbrs	r25, 5
  88:	fc cf       	rjmp	.-8      	; 0x82 <usart_putchar_printf+0x16>
  8a:	9d e0       	ldi	r25, 0x0D	; 13
  8c:	90 93 c6 00 	sts	0x00C6, r25
  90:	ef cf       	rjmp	.-34     	; 0x70 <usart_putchar_printf+0x4>

00000092 <usart_init>:
void usart_init( unsigned int ubrr)
{

    // Set baud rate

    UBRR0H = (uint8_t)(ubrr>>8);
  92:	90 93 c5 00 	sts	0x00C5, r25
    UBRR0L = (uint8_t)ubrr;
  96:	80 93 c4 00 	sts	0x00C4, r24

    // Enable receiver and transmitter

    UCSR0B = (1<<RXEN0)|(1<<TXEN0);
  9a:	88 e1       	ldi	r24, 0x18	; 24
  9c:	80 93 c1 00 	sts	0x00C1, r24

    // Set frame format: 8data, 1stop bit

    UCSR0C = (1<<USBS0)|(3<<UCSZ00);
  a0:	8e e0       	ldi	r24, 0x0E	; 14
  a2:	80 93 c2 00 	sts	0x00C2, r24
}
  a6:	08 95       	ret

000000a8 <usart_getchar>:

char usart_getchar(void) {

    // Wait for incoming data

    while ( !(UCSR0A & (1<<RXC0) ) );
  a8:	80 91 c0 00 	lds	r24, 0x00C0
  ac:	87 ff       	sbrs	r24, 7
  ae:	fc cf       	rjmp	.-8      	; 0xa8 <usart_getchar>

    // Return the data

    return UDR0;
  b0:	80 91 c6 00 	lds	r24, 0x00C6
}
  b4:	08 95       	ret

000000b6 <usart_putchar>:

void usart_putchar(char data) {
	//Wait until the transmitter is ready
	while(!(UCSR0A & (1<<UDRE0)))
  b6:	90 91 c0 00 	lds	r25, 0x00C0
  ba:	95 ff       	sbrs	r25, 5
  bc:	fc cf       	rjmp	.-8      	; 0xb6 <usart_putchar>
	{
		;//Do nothing
	}
	//Now write the data to USART buffer
	UDR0=data;
  be:	80 93 c6 00 	sts	0x00C6, r24
}
  c2:	08 95       	ret

000000c4 <usart_kbhit>:

    //return nonzero if char waiting polled version

    unsigned char b;
    b=0;
    if(UCSR0A & (1<<RXC0)) b=1;
  c4:	80 91 c0 00 	lds	r24, 0x00C0
    return b;
}
  c8:	88 1f       	adc	r24, r24
  ca:	88 27       	eor	r24, r24
  cc:	88 1f       	adc	r24, r24
  ce:	08 95       	ret

000000d0 <usart_pstr>:

void usart_pstr(char *s) {
  d0:	fc 01       	movw	r30, r24

    // loop through entire string

    while (*s) {
  d2:	90 81       	ld	r25, Z
  d4:	99 23       	and	r25, r25
  d6:	51 f0       	breq	.+20     	; 0xec <usart_pstr+0x1c>
    b=0;
    if(UCSR0A & (1<<RXC0)) b=1;
    return b;
}

void usart_pstr(char *s) {
  d8:	31 96       	adiw	r30, 0x01	; 1
    return UDR0;
}

void usart_putchar(char data) {
	//Wait until the transmitter is ready
	while(!(UCSR0A & (1<<UDRE0)))
  da:	80 91 c0 00 	lds	r24, 0x00C0
  de:	85 ff       	sbrs	r24, 5
  e0:	fc cf       	rjmp	.-8      	; 0xda <usart_pstr+0xa>
	{
		;//Do nothing
	}
	//Now write the data to USART buffer
	UDR0=data;
  e2:	90 93 c6 00 	sts	0x00C6, r25

void usart_pstr(char *s) {

    // loop through entire string

    while (*s) {
  e6:	91 91       	ld	r25, Z+
  e8:	99 23       	and	r25, r25
  ea:	b9 f7       	brne	.-18     	; 0xda <usart_pstr+0xa>
  ec:	08 95       	ret

000000ee <adc_read>:
    usart_putchar(var);
    return 0;
}
unsigned int adc_read(void)
{
	ADCSRA  |= (1<<ADSC);				// Start conversion
  ee:	80 91 7a 00 	lds	r24, 0x007A
  f2:	80 64       	ori	r24, 0x40	; 64
  f4:	80 93 7a 00 	sts	0x007A, r24
	while (ADCSRA &  (1<<ADSC));		// wait until conversion  completes; ADSC=0 means Complete
  f8:	80 91 7a 00 	lds	r24, 0x007A
  fc:	86 fd       	sbrc	r24, 6
  fe:	fc cf       	rjmp	.-8      	; 0xf8 <adc_read+0xa>
	return ADCW;
 100:	20 91 78 00 	lds	r18, 0x0078
 104:	30 91 79 00 	lds	r19, 0x0079
}
 108:	c9 01       	movw	r24, r18
 10a:	08 95       	ret

0000010c <adc_init>:

void adc_init( void )
{
	ADCSRA |= (1<<ADEN); //Enable the ADC
 10c:	ea e7       	ldi	r30, 0x7A	; 122
 10e:	f0 e0       	ldi	r31, 0x00	; 0
 110:	80 81       	ld	r24, Z
 112:	80 68       	ori	r24, 0x80	; 128
 114:	80 83       	st	Z, r24
	ADCSRA |= (1<<ADPS2); //Use prescale factor 16 -> ADC clock is 500kHz
 116:	80 81       	ld	r24, Z
 118:	84 60       	ori	r24, 0x04	; 4
 11a:	80 83       	st	Z, r24
	ADMUX |= (1<<MUX1);	 //Initial channel selection
 11c:	ec e7       	ldi	r30, 0x7C	; 124
 11e:	f0 e0       	ldi	r31, 0x00	; 0
 120:	80 81       	ld	r24, Z
 122:	82 60       	ori	r24, 0x02	; 2
 124:	80 83       	st	Z, r24
	ADMUX |= (1<<MUX2);
 126:	80 81       	ld	r24, Z
 128:	84 60       	ori	r24, 0x04	; 4
 12a:	80 83       	st	Z, r24
	ADMUX |= (1<<REFS0); //Set source of reference signal
 12c:	80 81       	ld	r24, Z
 12e:	80 64       	ori	r24, 0x40	; 64
 130:	80 83       	st	Z, r24
	ADMUX |= (0<<REFS1);
 132:	80 81       	ld	r24, Z
 134:	80 83       	st	Z, r24
}
 136:	08 95       	ret

00000138 <main>:


int main(void)
{
 138:	ef 92       	push	r14
 13a:	ff 92       	push	r15
 13c:	0f 93       	push	r16
 13e:	1f 93       	push	r17
 140:	cf 93       	push	r28
 142:	df 93       	push	r29
void usart_init( unsigned int ubrr)
{

    // Set baud rate

    UBRR0H = (uint8_t)(ubrr>>8);
 144:	10 92 c5 00 	sts	0x00C5, r1
    UBRR0L = (uint8_t)ubrr;
 148:	8f e2       	ldi	r24, 0x2F	; 47
 14a:	80 93 c4 00 	sts	0x00C4, r24

    // Enable receiver and transmitter

    UCSR0B = (1<<RXEN0)|(1<<TXEN0);
 14e:	88 e1       	ldi	r24, 0x18	; 24
 150:	80 93 c1 00 	sts	0x00C1, r24

    // Set frame format: 8data, 1stop bit

    UCSR0C = (1<<USBS0)|(3<<UCSZ00);
 154:	8e e0       	ldi	r24, 0x0E	; 14
 156:	80 93 c2 00 	sts	0x00C2, r24


int main(void)
{
	usart_init(MYUBRR);
	adc_init();
 15a:	d8 df       	rcall	.-80     	; 0x10c <adc_init>
	stdout = &mystdout;
 15c:	85 e0       	ldi	r24, 0x05	; 5
 15e:	91 e0       	ldi	r25, 0x01	; 1
 160:	90 93 17 01 	sts	0x0117, r25
 164:	80 93 16 01 	sts	0x0116, r24
	int i=0;
    while(1)
    {
    	printf("%4d ", 1000);
 168:	00 d0       	rcall	.+0      	; 0x16a <main+0x32>
 16a:	00 d0       	rcall	.+0      	; 0x16c <main+0x34>
 16c:	00 e0       	ldi	r16, 0x00	; 0
 16e:	11 e0       	ldi	r17, 0x01	; 1
 170:	ed b7       	in	r30, 0x3d	; 61
 172:	fe b7       	in	r31, 0x3e	; 62
 174:	12 83       	std	Z+2, r17	; 0x02
 176:	01 83       	std	Z+1, r16	; 0x01
 178:	88 ee       	ldi	r24, 0xE8	; 232
 17a:	93 e0       	ldi	r25, 0x03	; 3
 17c:	94 83       	std	Z+4, r25	; 0x04
 17e:	83 83       	std	Z+3, r24	; 0x03
 180:	21 d0       	rcall	.+66     	; 0x1c4 <printf>
 182:	0f 90       	pop	r0
 184:	0f 90       	pop	r0
 186:	0f 90       	pop	r0
 188:	0f 90       	pop	r0
int main(void)
{
	usart_init(MYUBRR);
	adc_init();
	stdout = &mystdout;
	int i=0;
 18a:	c0 e0       	ldi	r28, 0x00	; 0
 18c:	d0 e0       	ldi	r29, 0x00	; 0
    while(1)
    {
    	printf("%4d ", 1000);
 18e:	88 ee       	ldi	r24, 0xE8	; 232
 190:	e8 2e       	mov	r14, r24
 192:	83 e0       	ldi	r24, 0x03	; 3
 194:	f8 2e       	mov	r15, r24
    	if (i >= 30)
    	{
    		i = 0;
    		printf("\n");
    	}
    	i++;
 196:	21 96       	adiw	r28, 0x01	; 1
	adc_init();
	stdout = &mystdout;
	int i=0;
    while(1)
    {
    	printf("%4d ", 1000);
 198:	00 d0       	rcall	.+0      	; 0x19a <main+0x62>
 19a:	00 d0       	rcall	.+0      	; 0x19c <main+0x64>
 19c:	ed b7       	in	r30, 0x3d	; 61
 19e:	fe b7       	in	r31, 0x3e	; 62
 1a0:	12 83       	std	Z+2, r17	; 0x02
 1a2:	01 83       	std	Z+1, r16	; 0x01
 1a4:	f4 82       	std	Z+4, r15	; 0x04
 1a6:	e3 82       	std	Z+3, r14	; 0x03
 1a8:	0d d0       	rcall	.+26     	; 0x1c4 <printf>
    	//_delay_ms(1);
    	if (i >= 30)
 1aa:	0f 90       	pop	r0
 1ac:	0f 90       	pop	r0
 1ae:	0f 90       	pop	r0
 1b0:	0f 90       	pop	r0
 1b2:	ce 31       	cpi	r28, 0x1E	; 30
 1b4:	d1 05       	cpc	r29, r1
 1b6:	7c f3       	brlt	.-34     	; 0x196 <main+0x5e>
    	{
    		i = 0;
    		printf("\n");
 1b8:	8a e0       	ldi	r24, 0x0A	; 10
 1ba:	90 e0       	ldi	r25, 0x00	; 0
 1bc:	15 d0       	rcall	.+42     	; 0x1e8 <putchar>
    {
    	printf("%4d ", 1000);
    	//_delay_ms(1);
    	if (i >= 30)
    	{
    		i = 0;
 1be:	c0 e0       	ldi	r28, 0x00	; 0
 1c0:	d0 e0       	ldi	r29, 0x00	; 0
 1c2:	e9 cf       	rjmp	.-46     	; 0x196 <main+0x5e>

000001c4 <printf>:
 1c4:	a0 e0       	ldi	r26, 0x00	; 0
 1c6:	b0 e0       	ldi	r27, 0x00	; 0
 1c8:	e7 ee       	ldi	r30, 0xE7	; 231
 1ca:	f0 e0       	ldi	r31, 0x00	; 0
 1cc:	9b c2       	rjmp	.+1334   	; 0x704 <__prologue_saves__+0x20>
 1ce:	fe 01       	movw	r30, r28
 1d0:	35 96       	adiw	r30, 0x05	; 5
 1d2:	61 91       	ld	r22, Z+
 1d4:	71 91       	ld	r23, Z+
 1d6:	80 91 16 01 	lds	r24, 0x0116
 1da:	90 91 17 01 	lds	r25, 0x0117
 1de:	af 01       	movw	r20, r30
 1e0:	09 d0       	rcall	.+18     	; 0x1f4 <vfprintf>
 1e2:	20 96       	adiw	r28, 0x00	; 0
 1e4:	e2 e0       	ldi	r30, 0x02	; 2
 1e6:	aa c2       	rjmp	.+1364   	; 0x73c <__epilogue_restores__+0x20>

000001e8 <putchar>:
 1e8:	60 91 16 01 	lds	r22, 0x0116
 1ec:	70 91 17 01 	lds	r23, 0x0117
 1f0:	ef d1       	rcall	.+990    	; 0x5d0 <fputc>
 1f2:	08 95       	ret

000001f4 <vfprintf>:
 1f4:	ac e0       	ldi	r26, 0x0C	; 12
 1f6:	b0 e0       	ldi	r27, 0x00	; 0
 1f8:	ef ef       	ldi	r30, 0xFF	; 255
 1fa:	f0 e0       	ldi	r31, 0x00	; 0
 1fc:	73 c2       	rjmp	.+1254   	; 0x6e4 <__prologue_saves__>
 1fe:	6c 01       	movw	r12, r24
 200:	1b 01       	movw	r2, r22
 202:	8a 01       	movw	r16, r20
 204:	fc 01       	movw	r30, r24
 206:	17 82       	std	Z+7, r1	; 0x07
 208:	16 82       	std	Z+6, r1	; 0x06
 20a:	83 81       	ldd	r24, Z+3	; 0x03
 20c:	81 ff       	sbrs	r24, 1
 20e:	c4 c1       	rjmp	.+904    	; 0x598 <__stack+0x299>
 210:	2e 01       	movw	r4, r28
 212:	08 94       	sec
 214:	41 1c       	adc	r4, r1
 216:	51 1c       	adc	r5, r1
 218:	f6 01       	movw	r30, r12
 21a:	93 81       	ldd	r25, Z+3	; 0x03
 21c:	f1 01       	movw	r30, r2
 21e:	93 fd       	sbrc	r25, 3
 220:	85 91       	lpm	r24, Z+
 222:	93 ff       	sbrs	r25, 3
 224:	81 91       	ld	r24, Z+
 226:	1f 01       	movw	r2, r30
 228:	88 23       	and	r24, r24
 22a:	09 f4       	brne	.+2      	; 0x22e <vfprintf+0x3a>
 22c:	b1 c1       	rjmp	.+866    	; 0x590 <__stack+0x291>
 22e:	85 32       	cpi	r24, 0x25	; 37
 230:	39 f4       	brne	.+14     	; 0x240 <vfprintf+0x4c>
 232:	93 fd       	sbrc	r25, 3
 234:	85 91       	lpm	r24, Z+
 236:	93 ff       	sbrs	r25, 3
 238:	81 91       	ld	r24, Z+
 23a:	1f 01       	movw	r2, r30
 23c:	85 32       	cpi	r24, 0x25	; 37
 23e:	21 f4       	brne	.+8      	; 0x248 <vfprintf+0x54>
 240:	90 e0       	ldi	r25, 0x00	; 0
 242:	b6 01       	movw	r22, r12
 244:	c5 d1       	rcall	.+906    	; 0x5d0 <fputc>
 246:	e8 cf       	rjmp	.-48     	; 0x218 <vfprintf+0x24>
 248:	ee 24       	eor	r14, r14
 24a:	ff 24       	eor	r15, r15
 24c:	20 e0       	ldi	r18, 0x00	; 0
 24e:	20 32       	cpi	r18, 0x20	; 32
 250:	b0 f4       	brcc	.+44     	; 0x27e <vfprintf+0x8a>
 252:	8b 32       	cpi	r24, 0x2B	; 43
 254:	69 f0       	breq	.+26     	; 0x270 <vfprintf+0x7c>
 256:	8c 32       	cpi	r24, 0x2C	; 44
 258:	28 f4       	brcc	.+10     	; 0x264 <vfprintf+0x70>
 25a:	80 32       	cpi	r24, 0x20	; 32
 25c:	51 f0       	breq	.+20     	; 0x272 <vfprintf+0x7e>
 25e:	83 32       	cpi	r24, 0x23	; 35
 260:	71 f4       	brne	.+28     	; 0x27e <vfprintf+0x8a>
 262:	0b c0       	rjmp	.+22     	; 0x27a <vfprintf+0x86>
 264:	8d 32       	cpi	r24, 0x2D	; 45
 266:	39 f0       	breq	.+14     	; 0x276 <vfprintf+0x82>
 268:	80 33       	cpi	r24, 0x30	; 48
 26a:	49 f4       	brne	.+18     	; 0x27e <vfprintf+0x8a>
 26c:	21 60       	ori	r18, 0x01	; 1
 26e:	2c c0       	rjmp	.+88     	; 0x2c8 <vfprintf+0xd4>
 270:	22 60       	ori	r18, 0x02	; 2
 272:	24 60       	ori	r18, 0x04	; 4
 274:	29 c0       	rjmp	.+82     	; 0x2c8 <vfprintf+0xd4>
 276:	28 60       	ori	r18, 0x08	; 8
 278:	27 c0       	rjmp	.+78     	; 0x2c8 <vfprintf+0xd4>
 27a:	20 61       	ori	r18, 0x10	; 16
 27c:	25 c0       	rjmp	.+74     	; 0x2c8 <vfprintf+0xd4>
 27e:	27 fd       	sbrc	r18, 7
 280:	2c c0       	rjmp	.+88     	; 0x2da <vfprintf+0xe6>
 282:	38 2f       	mov	r19, r24
 284:	30 53       	subi	r19, 0x30	; 48
 286:	3a 30       	cpi	r19, 0x0A	; 10
 288:	98 f4       	brcc	.+38     	; 0x2b0 <vfprintf+0xbc>
 28a:	26 ff       	sbrs	r18, 6
 28c:	08 c0       	rjmp	.+16     	; 0x29e <vfprintf+0xaa>
 28e:	8e 2d       	mov	r24, r14
 290:	88 0f       	add	r24, r24
 292:	e8 2e       	mov	r14, r24
 294:	ee 0c       	add	r14, r14
 296:	ee 0c       	add	r14, r14
 298:	e8 0e       	add	r14, r24
 29a:	e3 0e       	add	r14, r19
 29c:	15 c0       	rjmp	.+42     	; 0x2c8 <vfprintf+0xd4>
 29e:	8f 2d       	mov	r24, r15
 2a0:	88 0f       	add	r24, r24
 2a2:	f8 2e       	mov	r15, r24
 2a4:	ff 0c       	add	r15, r15
 2a6:	ff 0c       	add	r15, r15
 2a8:	f8 0e       	add	r15, r24
 2aa:	f3 0e       	add	r15, r19
 2ac:	20 62       	ori	r18, 0x20	; 32
 2ae:	0c c0       	rjmp	.+24     	; 0x2c8 <vfprintf+0xd4>
 2b0:	8e 32       	cpi	r24, 0x2E	; 46
 2b2:	21 f4       	brne	.+8      	; 0x2bc <vfprintf+0xc8>
 2b4:	26 fd       	sbrc	r18, 6
 2b6:	6c c1       	rjmp	.+728    	; 0x590 <__stack+0x291>
 2b8:	20 64       	ori	r18, 0x40	; 64
 2ba:	06 c0       	rjmp	.+12     	; 0x2c8 <vfprintf+0xd4>
 2bc:	8c 36       	cpi	r24, 0x6C	; 108
 2be:	11 f4       	brne	.+4      	; 0x2c4 <vfprintf+0xd0>
 2c0:	20 68       	ori	r18, 0x80	; 128
 2c2:	02 c0       	rjmp	.+4      	; 0x2c8 <vfprintf+0xd4>
 2c4:	88 36       	cpi	r24, 0x68	; 104
 2c6:	49 f4       	brne	.+18     	; 0x2da <vfprintf+0xe6>
 2c8:	f1 01       	movw	r30, r2
 2ca:	93 fd       	sbrc	r25, 3
 2cc:	85 91       	lpm	r24, Z+
 2ce:	93 ff       	sbrs	r25, 3
 2d0:	81 91       	ld	r24, Z+
 2d2:	1f 01       	movw	r2, r30
 2d4:	88 23       	and	r24, r24
 2d6:	09 f0       	breq	.+2      	; 0x2da <vfprintf+0xe6>
 2d8:	ba cf       	rjmp	.-140    	; 0x24e <vfprintf+0x5a>
 2da:	98 2f       	mov	r25, r24
 2dc:	95 54       	subi	r25, 0x45	; 69
 2de:	93 30       	cpi	r25, 0x03	; 3
 2e0:	18 f0       	brcs	.+6      	; 0x2e8 <vfprintf+0xf4>
 2e2:	90 52       	subi	r25, 0x20	; 32
 2e4:	93 30       	cpi	r25, 0x03	; 3
 2e6:	28 f4       	brcc	.+10     	; 0x2f2 <vfprintf+0xfe>
 2e8:	0c 5f       	subi	r16, 0xFC	; 252
 2ea:	1f 4f       	sbci	r17, 0xFF	; 255
 2ec:	ff e3       	ldi	r31, 0x3F	; 63
 2ee:	f9 83       	std	Y+1, r31	; 0x01
 2f0:	0d c0       	rjmp	.+26     	; 0x30c <__stack+0xd>
 2f2:	83 36       	cpi	r24, 0x63	; 99
 2f4:	31 f0       	breq	.+12     	; 0x302 <__stack+0x3>
 2f6:	83 37       	cpi	r24, 0x73	; 115
 2f8:	71 f0       	breq	.+28     	; 0x316 <__stack+0x17>
 2fa:	83 35       	cpi	r24, 0x53	; 83
 2fc:	09 f0       	breq	.+2      	; 0x300 <__stack+0x1>
 2fe:	5c c0       	rjmp	.+184    	; 0x3b8 <__stack+0xb9>
 300:	21 c0       	rjmp	.+66     	; 0x344 <__stack+0x45>
 302:	f8 01       	movw	r30, r16
 304:	80 81       	ld	r24, Z
 306:	89 83       	std	Y+1, r24	; 0x01
 308:	0e 5f       	subi	r16, 0xFE	; 254
 30a:	1f 4f       	sbci	r17, 0xFF	; 255
 30c:	42 01       	movw	r8, r4
 30e:	71 e0       	ldi	r23, 0x01	; 1
 310:	a7 2e       	mov	r10, r23
 312:	b1 2c       	mov	r11, r1
 314:	15 c0       	rjmp	.+42     	; 0x340 <__stack+0x41>
 316:	62 e0       	ldi	r22, 0x02	; 2
 318:	66 2e       	mov	r6, r22
 31a:	71 2c       	mov	r7, r1
 31c:	60 0e       	add	r6, r16
 31e:	71 1e       	adc	r7, r17
 320:	f8 01       	movw	r30, r16
 322:	80 80       	ld	r8, Z
 324:	91 80       	ldd	r9, Z+1	; 0x01
 326:	26 ff       	sbrs	r18, 6
 328:	03 c0       	rjmp	.+6      	; 0x330 <__stack+0x31>
 32a:	6e 2d       	mov	r22, r14
 32c:	70 e0       	ldi	r23, 0x00	; 0
 32e:	02 c0       	rjmp	.+4      	; 0x334 <__stack+0x35>
 330:	6f ef       	ldi	r22, 0xFF	; 255
 332:	7f ef       	ldi	r23, 0xFF	; 255
 334:	c4 01       	movw	r24, r8
 336:	2c 87       	std	Y+12, r18	; 0x0c
 338:	40 d1       	rcall	.+640    	; 0x5ba <strnlen>
 33a:	5c 01       	movw	r10, r24
 33c:	83 01       	movw	r16, r6
 33e:	2c 85       	ldd	r18, Y+12	; 0x0c
 340:	2f 77       	andi	r18, 0x7F	; 127
 342:	16 c0       	rjmp	.+44     	; 0x370 <__stack+0x71>
 344:	52 e0       	ldi	r21, 0x02	; 2
 346:	65 2e       	mov	r6, r21
 348:	71 2c       	mov	r7, r1
 34a:	60 0e       	add	r6, r16
 34c:	71 1e       	adc	r7, r17
 34e:	f8 01       	movw	r30, r16
 350:	80 80       	ld	r8, Z
 352:	91 80       	ldd	r9, Z+1	; 0x01
 354:	26 ff       	sbrs	r18, 6
 356:	03 c0       	rjmp	.+6      	; 0x35e <__stack+0x5f>
 358:	6e 2d       	mov	r22, r14
 35a:	70 e0       	ldi	r23, 0x00	; 0
 35c:	02 c0       	rjmp	.+4      	; 0x362 <__stack+0x63>
 35e:	6f ef       	ldi	r22, 0xFF	; 255
 360:	7f ef       	ldi	r23, 0xFF	; 255
 362:	c4 01       	movw	r24, r8
 364:	2c 87       	std	Y+12, r18	; 0x0c
 366:	1e d1       	rcall	.+572    	; 0x5a4 <strnlen_P>
 368:	5c 01       	movw	r10, r24
 36a:	2c 85       	ldd	r18, Y+12	; 0x0c
 36c:	20 68       	ori	r18, 0x80	; 128
 36e:	83 01       	movw	r16, r6
 370:	23 fd       	sbrc	r18, 3
 372:	1e c0       	rjmp	.+60     	; 0x3b0 <__stack+0xb1>
 374:	07 c0       	rjmp	.+14     	; 0x384 <__stack+0x85>
 376:	80 e2       	ldi	r24, 0x20	; 32
 378:	90 e0       	ldi	r25, 0x00	; 0
 37a:	b6 01       	movw	r22, r12
 37c:	2c 87       	std	Y+12, r18	; 0x0c
 37e:	28 d1       	rcall	.+592    	; 0x5d0 <fputc>
 380:	fa 94       	dec	r15
 382:	2c 85       	ldd	r18, Y+12	; 0x0c
 384:	8f 2d       	mov	r24, r15
 386:	90 e0       	ldi	r25, 0x00	; 0
 388:	a8 16       	cp	r10, r24
 38a:	b9 06       	cpc	r11, r25
 38c:	a0 f3       	brcs	.-24     	; 0x376 <__stack+0x77>
 38e:	10 c0       	rjmp	.+32     	; 0x3b0 <__stack+0xb1>
 390:	f4 01       	movw	r30, r8
 392:	27 fd       	sbrc	r18, 7
 394:	85 91       	lpm	r24, Z+
 396:	27 ff       	sbrs	r18, 7
 398:	81 91       	ld	r24, Z+
 39a:	4f 01       	movw	r8, r30
 39c:	90 e0       	ldi	r25, 0x00	; 0
 39e:	b6 01       	movw	r22, r12
 3a0:	2c 87       	std	Y+12, r18	; 0x0c
 3a2:	16 d1       	rcall	.+556    	; 0x5d0 <fputc>
 3a4:	2c 85       	ldd	r18, Y+12	; 0x0c
 3a6:	f1 10       	cpse	r15, r1
 3a8:	fa 94       	dec	r15
 3aa:	08 94       	sec
 3ac:	a1 08       	sbc	r10, r1
 3ae:	b1 08       	sbc	r11, r1
 3b0:	a1 14       	cp	r10, r1
 3b2:	b1 04       	cpc	r11, r1
 3b4:	69 f7       	brne	.-38     	; 0x390 <__stack+0x91>
 3b6:	e9 c0       	rjmp	.+466    	; 0x58a <__stack+0x28b>
 3b8:	84 36       	cpi	r24, 0x64	; 100
 3ba:	11 f0       	breq	.+4      	; 0x3c0 <__stack+0xc1>
 3bc:	89 36       	cpi	r24, 0x69	; 105
 3be:	41 f5       	brne	.+80     	; 0x410 <__stack+0x111>
 3c0:	27 ff       	sbrs	r18, 7
 3c2:	08 c0       	rjmp	.+16     	; 0x3d4 <__stack+0xd5>
 3c4:	f8 01       	movw	r30, r16
 3c6:	60 81       	ld	r22, Z
 3c8:	71 81       	ldd	r23, Z+1	; 0x01
 3ca:	82 81       	ldd	r24, Z+2	; 0x02
 3cc:	93 81       	ldd	r25, Z+3	; 0x03
 3ce:	0c 5f       	subi	r16, 0xFC	; 252
 3d0:	1f 4f       	sbci	r17, 0xFF	; 255
 3d2:	09 c0       	rjmp	.+18     	; 0x3e6 <__stack+0xe7>
 3d4:	f8 01       	movw	r30, r16
 3d6:	60 81       	ld	r22, Z
 3d8:	71 81       	ldd	r23, Z+1	; 0x01
 3da:	88 27       	eor	r24, r24
 3dc:	77 fd       	sbrc	r23, 7
 3de:	80 95       	com	r24
 3e0:	98 2f       	mov	r25, r24
 3e2:	0e 5f       	subi	r16, 0xFE	; 254
 3e4:	1f 4f       	sbci	r17, 0xFF	; 255
 3e6:	4f e6       	ldi	r20, 0x6F	; 111
 3e8:	b4 2e       	mov	r11, r20
 3ea:	b2 22       	and	r11, r18
 3ec:	97 ff       	sbrs	r25, 7
 3ee:	09 c0       	rjmp	.+18     	; 0x402 <__stack+0x103>
 3f0:	90 95       	com	r25
 3f2:	80 95       	com	r24
 3f4:	70 95       	com	r23
 3f6:	61 95       	neg	r22
 3f8:	7f 4f       	sbci	r23, 0xFF	; 255
 3fa:	8f 4f       	sbci	r24, 0xFF	; 255
 3fc:	9f 4f       	sbci	r25, 0xFF	; 255
 3fe:	f0 e8       	ldi	r31, 0x80	; 128
 400:	bf 2a       	or	r11, r31
 402:	a2 01       	movw	r20, r4
 404:	2a e0       	ldi	r18, 0x0A	; 10
 406:	30 e0       	ldi	r19, 0x00	; 0
 408:	0f d1       	rcall	.+542    	; 0x628 <__ultoa_invert>
 40a:	78 2e       	mov	r7, r24
 40c:	74 18       	sub	r7, r4
 40e:	44 c0       	rjmp	.+136    	; 0x498 <__stack+0x199>
 410:	85 37       	cpi	r24, 0x75	; 117
 412:	31 f4       	brne	.+12     	; 0x420 <__stack+0x121>
 414:	3f ee       	ldi	r19, 0xEF	; 239
 416:	b3 2e       	mov	r11, r19
 418:	b2 22       	and	r11, r18
 41a:	2a e0       	ldi	r18, 0x0A	; 10
 41c:	30 e0       	ldi	r19, 0x00	; 0
 41e:	25 c0       	rjmp	.+74     	; 0x46a <__stack+0x16b>
 420:	99 ef       	ldi	r25, 0xF9	; 249
 422:	b9 2e       	mov	r11, r25
 424:	b2 22       	and	r11, r18
 426:	8f 36       	cpi	r24, 0x6F	; 111
 428:	c1 f0       	breq	.+48     	; 0x45a <__stack+0x15b>
 42a:	80 37       	cpi	r24, 0x70	; 112
 42c:	20 f4       	brcc	.+8      	; 0x436 <__stack+0x137>
 42e:	88 35       	cpi	r24, 0x58	; 88
 430:	09 f0       	breq	.+2      	; 0x434 <__stack+0x135>
 432:	ae c0       	rjmp	.+348    	; 0x590 <__stack+0x291>
 434:	0d c0       	rjmp	.+26     	; 0x450 <__stack+0x151>
 436:	80 37       	cpi	r24, 0x70	; 112
 438:	21 f0       	breq	.+8      	; 0x442 <__stack+0x143>
 43a:	88 37       	cpi	r24, 0x78	; 120
 43c:	09 f0       	breq	.+2      	; 0x440 <__stack+0x141>
 43e:	a8 c0       	rjmp	.+336    	; 0x590 <__stack+0x291>
 440:	02 c0       	rjmp	.+4      	; 0x446 <__stack+0x147>
 442:	20 e1       	ldi	r18, 0x10	; 16
 444:	b2 2a       	or	r11, r18
 446:	b4 fe       	sbrs	r11, 4
 448:	0b c0       	rjmp	.+22     	; 0x460 <__stack+0x161>
 44a:	84 e0       	ldi	r24, 0x04	; 4
 44c:	b8 2a       	or	r11, r24
 44e:	08 c0       	rjmp	.+16     	; 0x460 <__stack+0x161>
 450:	b4 fe       	sbrs	r11, 4
 452:	09 c0       	rjmp	.+18     	; 0x466 <__stack+0x167>
 454:	e6 e0       	ldi	r30, 0x06	; 6
 456:	be 2a       	or	r11, r30
 458:	06 c0       	rjmp	.+12     	; 0x466 <__stack+0x167>
 45a:	28 e0       	ldi	r18, 0x08	; 8
 45c:	30 e0       	ldi	r19, 0x00	; 0
 45e:	05 c0       	rjmp	.+10     	; 0x46a <__stack+0x16b>
 460:	20 e1       	ldi	r18, 0x10	; 16
 462:	30 e0       	ldi	r19, 0x00	; 0
 464:	02 c0       	rjmp	.+4      	; 0x46a <__stack+0x16b>
 466:	20 e1       	ldi	r18, 0x10	; 16
 468:	32 e0       	ldi	r19, 0x02	; 2
 46a:	b7 fe       	sbrs	r11, 7
 46c:	08 c0       	rjmp	.+16     	; 0x47e <__stack+0x17f>
 46e:	f8 01       	movw	r30, r16
 470:	60 81       	ld	r22, Z
 472:	71 81       	ldd	r23, Z+1	; 0x01
 474:	82 81       	ldd	r24, Z+2	; 0x02
 476:	93 81       	ldd	r25, Z+3	; 0x03
 478:	0c 5f       	subi	r16, 0xFC	; 252
 47a:	1f 4f       	sbci	r17, 0xFF	; 255
 47c:	07 c0       	rjmp	.+14     	; 0x48c <__stack+0x18d>
 47e:	f8 01       	movw	r30, r16
 480:	60 81       	ld	r22, Z
 482:	71 81       	ldd	r23, Z+1	; 0x01
 484:	80 e0       	ldi	r24, 0x00	; 0
 486:	90 e0       	ldi	r25, 0x00	; 0
 488:	0e 5f       	subi	r16, 0xFE	; 254
 48a:	1f 4f       	sbci	r17, 0xFF	; 255
 48c:	a2 01       	movw	r20, r4
 48e:	cc d0       	rcall	.+408    	; 0x628 <__ultoa_invert>
 490:	78 2e       	mov	r7, r24
 492:	74 18       	sub	r7, r4
 494:	ff e7       	ldi	r31, 0x7F	; 127
 496:	bf 22       	and	r11, r31
 498:	b6 fe       	sbrs	r11, 6
 49a:	0b c0       	rjmp	.+22     	; 0x4b2 <__stack+0x1b3>
 49c:	2e ef       	ldi	r18, 0xFE	; 254
 49e:	b2 22       	and	r11, r18
 4a0:	7e 14       	cp	r7, r14
 4a2:	38 f4       	brcc	.+14     	; 0x4b2 <__stack+0x1b3>
 4a4:	b4 fe       	sbrs	r11, 4
 4a6:	07 c0       	rjmp	.+14     	; 0x4b6 <__stack+0x1b7>
 4a8:	b2 fc       	sbrc	r11, 2
 4aa:	05 c0       	rjmp	.+10     	; 0x4b6 <__stack+0x1b7>
 4ac:	8f ee       	ldi	r24, 0xEF	; 239
 4ae:	b8 22       	and	r11, r24
 4b0:	02 c0       	rjmp	.+4      	; 0x4b6 <__stack+0x1b7>
 4b2:	a7 2c       	mov	r10, r7
 4b4:	01 c0       	rjmp	.+2      	; 0x4b8 <__stack+0x1b9>
 4b6:	ae 2c       	mov	r10, r14
 4b8:	8b 2d       	mov	r24, r11
 4ba:	90 e0       	ldi	r25, 0x00	; 0
 4bc:	b4 fe       	sbrs	r11, 4
 4be:	0d c0       	rjmp	.+26     	; 0x4da <__stack+0x1db>
 4c0:	fe 01       	movw	r30, r28
 4c2:	e7 0d       	add	r30, r7
 4c4:	f1 1d       	adc	r31, r1
 4c6:	20 81       	ld	r18, Z
 4c8:	20 33       	cpi	r18, 0x30	; 48
 4ca:	19 f4       	brne	.+6      	; 0x4d2 <__stack+0x1d3>
 4cc:	e9 ee       	ldi	r30, 0xE9	; 233
 4ce:	be 22       	and	r11, r30
 4d0:	09 c0       	rjmp	.+18     	; 0x4e4 <__stack+0x1e5>
 4d2:	a3 94       	inc	r10
 4d4:	b2 fe       	sbrs	r11, 2
 4d6:	06 c0       	rjmp	.+12     	; 0x4e4 <__stack+0x1e5>
 4d8:	04 c0       	rjmp	.+8      	; 0x4e2 <__stack+0x1e3>
 4da:	86 78       	andi	r24, 0x86	; 134
 4dc:	90 70       	andi	r25, 0x00	; 0
 4de:	00 97       	sbiw	r24, 0x00	; 0
 4e0:	09 f0       	breq	.+2      	; 0x4e4 <__stack+0x1e5>
 4e2:	a3 94       	inc	r10
 4e4:	8b 2c       	mov	r8, r11
 4e6:	99 24       	eor	r9, r9
 4e8:	b3 fc       	sbrc	r11, 3
 4ea:	13 c0       	rjmp	.+38     	; 0x512 <__stack+0x213>
 4ec:	b0 fe       	sbrs	r11, 0
 4ee:	0e c0       	rjmp	.+28     	; 0x50c <__stack+0x20d>
 4f0:	af 14       	cp	r10, r15
 4f2:	28 f4       	brcc	.+10     	; 0x4fe <__stack+0x1ff>
 4f4:	e7 2c       	mov	r14, r7
 4f6:	ef 0c       	add	r14, r15
 4f8:	ea 18       	sub	r14, r10
 4fa:	af 2c       	mov	r10, r15
 4fc:	07 c0       	rjmp	.+14     	; 0x50c <__stack+0x20d>
 4fe:	e7 2c       	mov	r14, r7
 500:	05 c0       	rjmp	.+10     	; 0x50c <__stack+0x20d>
 502:	80 e2       	ldi	r24, 0x20	; 32
 504:	90 e0       	ldi	r25, 0x00	; 0
 506:	b6 01       	movw	r22, r12
 508:	63 d0       	rcall	.+198    	; 0x5d0 <fputc>
 50a:	a3 94       	inc	r10
 50c:	af 14       	cp	r10, r15
 50e:	c8 f3       	brcs	.-14     	; 0x502 <__stack+0x203>
 510:	04 c0       	rjmp	.+8      	; 0x51a <__stack+0x21b>
 512:	af 14       	cp	r10, r15
 514:	10 f4       	brcc	.+4      	; 0x51a <__stack+0x21b>
 516:	fa 18       	sub	r15, r10
 518:	01 c0       	rjmp	.+2      	; 0x51c <__stack+0x21d>
 51a:	ff 24       	eor	r15, r15
 51c:	84 fe       	sbrs	r8, 4
 51e:	0e c0       	rjmp	.+28     	; 0x53c <__stack+0x23d>
 520:	80 e3       	ldi	r24, 0x30	; 48
 522:	90 e0       	ldi	r25, 0x00	; 0
 524:	b6 01       	movw	r22, r12
 526:	54 d0       	rcall	.+168    	; 0x5d0 <fputc>
 528:	82 fe       	sbrs	r8, 2
 52a:	1d c0       	rjmp	.+58     	; 0x566 <__stack+0x267>
 52c:	81 fe       	sbrs	r8, 1
 52e:	03 c0       	rjmp	.+6      	; 0x536 <__stack+0x237>
 530:	88 e5       	ldi	r24, 0x58	; 88
 532:	90 e0       	ldi	r25, 0x00	; 0
 534:	10 c0       	rjmp	.+32     	; 0x556 <__stack+0x257>
 536:	88 e7       	ldi	r24, 0x78	; 120
 538:	90 e0       	ldi	r25, 0x00	; 0
 53a:	0d c0       	rjmp	.+26     	; 0x556 <__stack+0x257>
 53c:	c4 01       	movw	r24, r8
 53e:	86 78       	andi	r24, 0x86	; 134
 540:	90 70       	andi	r25, 0x00	; 0
 542:	00 97       	sbiw	r24, 0x00	; 0
 544:	81 f0       	breq	.+32     	; 0x566 <__stack+0x267>
 546:	81 fc       	sbrc	r8, 1
 548:	02 c0       	rjmp	.+4      	; 0x54e <__stack+0x24f>
 54a:	80 e2       	ldi	r24, 0x20	; 32
 54c:	01 c0       	rjmp	.+2      	; 0x550 <__stack+0x251>
 54e:	8b e2       	ldi	r24, 0x2B	; 43
 550:	b7 fc       	sbrc	r11, 7
 552:	8d e2       	ldi	r24, 0x2D	; 45
 554:	90 e0       	ldi	r25, 0x00	; 0
 556:	b6 01       	movw	r22, r12
 558:	3b d0       	rcall	.+118    	; 0x5d0 <fputc>
 55a:	05 c0       	rjmp	.+10     	; 0x566 <__stack+0x267>
 55c:	80 e3       	ldi	r24, 0x30	; 48
 55e:	90 e0       	ldi	r25, 0x00	; 0
 560:	b6 01       	movw	r22, r12
 562:	36 d0       	rcall	.+108    	; 0x5d0 <fputc>
 564:	ea 94       	dec	r14
 566:	7e 14       	cp	r7, r14
 568:	c8 f3       	brcs	.-14     	; 0x55c <__stack+0x25d>
 56a:	7a 94       	dec	r7
 56c:	f2 01       	movw	r30, r4
 56e:	e7 0d       	add	r30, r7
 570:	f1 1d       	adc	r31, r1
 572:	80 81       	ld	r24, Z
 574:	90 e0       	ldi	r25, 0x00	; 0
 576:	b6 01       	movw	r22, r12
 578:	2b d0       	rcall	.+86     	; 0x5d0 <fputc>
 57a:	77 20       	and	r7, r7
 57c:	b1 f7       	brne	.-20     	; 0x56a <__stack+0x26b>
 57e:	05 c0       	rjmp	.+10     	; 0x58a <__stack+0x28b>
 580:	80 e2       	ldi	r24, 0x20	; 32
 582:	90 e0       	ldi	r25, 0x00	; 0
 584:	b6 01       	movw	r22, r12
 586:	24 d0       	rcall	.+72     	; 0x5d0 <fputc>
 588:	fa 94       	dec	r15
 58a:	ff 20       	and	r15, r15
 58c:	c9 f7       	brne	.-14     	; 0x580 <__stack+0x281>
 58e:	44 ce       	rjmp	.-888    	; 0x218 <vfprintf+0x24>
 590:	f6 01       	movw	r30, r12
 592:	26 81       	ldd	r18, Z+6	; 0x06
 594:	37 81       	ldd	r19, Z+7	; 0x07
 596:	02 c0       	rjmp	.+4      	; 0x59c <__stack+0x29d>
 598:	2f ef       	ldi	r18, 0xFF	; 255
 59a:	3f ef       	ldi	r19, 0xFF	; 255
 59c:	c9 01       	movw	r24, r18
 59e:	2c 96       	adiw	r28, 0x0c	; 12
 5a0:	e2 e1       	ldi	r30, 0x12	; 18
 5a2:	bc c0       	rjmp	.+376    	; 0x71c <__epilogue_restores__>

000005a4 <strnlen_P>:
 5a4:	fc 01       	movw	r30, r24
 5a6:	05 90       	lpm	r0, Z+
 5a8:	61 50       	subi	r22, 0x01	; 1
 5aa:	70 40       	sbci	r23, 0x00	; 0
 5ac:	01 10       	cpse	r0, r1
 5ae:	d8 f7       	brcc	.-10     	; 0x5a6 <strnlen_P+0x2>
 5b0:	80 95       	com	r24
 5b2:	90 95       	com	r25
 5b4:	8e 0f       	add	r24, r30
 5b6:	9f 1f       	adc	r25, r31
 5b8:	08 95       	ret

000005ba <strnlen>:
 5ba:	fc 01       	movw	r30, r24
 5bc:	61 50       	subi	r22, 0x01	; 1
 5be:	70 40       	sbci	r23, 0x00	; 0
 5c0:	01 90       	ld	r0, Z+
 5c2:	01 10       	cpse	r0, r1
 5c4:	d8 f7       	brcc	.-10     	; 0x5bc <strnlen+0x2>
 5c6:	80 95       	com	r24
 5c8:	90 95       	com	r25
 5ca:	8e 0f       	add	r24, r30
 5cc:	9f 1f       	adc	r25, r31
 5ce:	08 95       	ret

000005d0 <fputc>:
 5d0:	0f 93       	push	r16
 5d2:	1f 93       	push	r17
 5d4:	cf 93       	push	r28
 5d6:	df 93       	push	r29
 5d8:	8c 01       	movw	r16, r24
 5da:	eb 01       	movw	r28, r22
 5dc:	8b 81       	ldd	r24, Y+3	; 0x03
 5de:	81 ff       	sbrs	r24, 1
 5e0:	1b c0       	rjmp	.+54     	; 0x618 <fputc+0x48>
 5e2:	82 ff       	sbrs	r24, 2
 5e4:	0d c0       	rjmp	.+26     	; 0x600 <fputc+0x30>
 5e6:	2e 81       	ldd	r18, Y+6	; 0x06
 5e8:	3f 81       	ldd	r19, Y+7	; 0x07
 5ea:	8c 81       	ldd	r24, Y+4	; 0x04
 5ec:	9d 81       	ldd	r25, Y+5	; 0x05
 5ee:	28 17       	cp	r18, r24
 5f0:	39 07       	cpc	r19, r25
 5f2:	64 f4       	brge	.+24     	; 0x60c <fputc+0x3c>
 5f4:	e8 81       	ld	r30, Y
 5f6:	f9 81       	ldd	r31, Y+1	; 0x01
 5f8:	01 93       	st	Z+, r16
 5fa:	f9 83       	std	Y+1, r31	; 0x01
 5fc:	e8 83       	st	Y, r30
 5fe:	06 c0       	rjmp	.+12     	; 0x60c <fputc+0x3c>
 600:	e8 85       	ldd	r30, Y+8	; 0x08
 602:	f9 85       	ldd	r31, Y+9	; 0x09
 604:	80 2f       	mov	r24, r16
 606:	09 95       	icall
 608:	00 97       	sbiw	r24, 0x00	; 0
 60a:	31 f4       	brne	.+12     	; 0x618 <fputc+0x48>
 60c:	8e 81       	ldd	r24, Y+6	; 0x06
 60e:	9f 81       	ldd	r25, Y+7	; 0x07
 610:	01 96       	adiw	r24, 0x01	; 1
 612:	9f 83       	std	Y+7, r25	; 0x07
 614:	8e 83       	std	Y+6, r24	; 0x06
 616:	02 c0       	rjmp	.+4      	; 0x61c <fputc+0x4c>
 618:	0f ef       	ldi	r16, 0xFF	; 255
 61a:	1f ef       	ldi	r17, 0xFF	; 255
 61c:	c8 01       	movw	r24, r16
 61e:	df 91       	pop	r29
 620:	cf 91       	pop	r28
 622:	1f 91       	pop	r17
 624:	0f 91       	pop	r16
 626:	08 95       	ret

00000628 <__ultoa_invert>:
 628:	fa 01       	movw	r30, r20
 62a:	aa 27       	eor	r26, r26
 62c:	28 30       	cpi	r18, 0x08	; 8
 62e:	51 f1       	breq	.+84     	; 0x684 <__ultoa_invert+0x5c>
 630:	20 31       	cpi	r18, 0x10	; 16
 632:	81 f1       	breq	.+96     	; 0x694 <__ultoa_invert+0x6c>
 634:	e8 94       	clt
 636:	6f 93       	push	r22
 638:	6e 7f       	andi	r22, 0xFE	; 254
 63a:	6e 5f       	subi	r22, 0xFE	; 254
 63c:	7f 4f       	sbci	r23, 0xFF	; 255
 63e:	8f 4f       	sbci	r24, 0xFF	; 255
 640:	9f 4f       	sbci	r25, 0xFF	; 255
 642:	af 4f       	sbci	r26, 0xFF	; 255
 644:	b1 e0       	ldi	r27, 0x01	; 1
 646:	3e d0       	rcall	.+124    	; 0x6c4 <__ultoa_invert+0x9c>
 648:	b4 e0       	ldi	r27, 0x04	; 4
 64a:	3c d0       	rcall	.+120    	; 0x6c4 <__ultoa_invert+0x9c>
 64c:	67 0f       	add	r22, r23
 64e:	78 1f       	adc	r23, r24
 650:	89 1f       	adc	r24, r25
 652:	9a 1f       	adc	r25, r26
 654:	a1 1d       	adc	r26, r1
 656:	68 0f       	add	r22, r24
 658:	79 1f       	adc	r23, r25
 65a:	8a 1f       	adc	r24, r26
 65c:	91 1d       	adc	r25, r1
 65e:	a1 1d       	adc	r26, r1
 660:	6a 0f       	add	r22, r26
 662:	71 1d       	adc	r23, r1
 664:	81 1d       	adc	r24, r1
 666:	91 1d       	adc	r25, r1
 668:	a1 1d       	adc	r26, r1
 66a:	20 d0       	rcall	.+64     	; 0x6ac <__ultoa_invert+0x84>
 66c:	09 f4       	brne	.+2      	; 0x670 <__ultoa_invert+0x48>
 66e:	68 94       	set
 670:	3f 91       	pop	r19
 672:	2a e0       	ldi	r18, 0x0A	; 10
 674:	26 9f       	mul	r18, r22
 676:	11 24       	eor	r1, r1
 678:	30 19       	sub	r19, r0
 67a:	30 5d       	subi	r19, 0xD0	; 208
 67c:	31 93       	st	Z+, r19
 67e:	de f6       	brtc	.-74     	; 0x636 <__ultoa_invert+0xe>
 680:	cf 01       	movw	r24, r30
 682:	08 95       	ret
 684:	46 2f       	mov	r20, r22
 686:	47 70       	andi	r20, 0x07	; 7
 688:	40 5d       	subi	r20, 0xD0	; 208
 68a:	41 93       	st	Z+, r20
 68c:	b3 e0       	ldi	r27, 0x03	; 3
 68e:	0f d0       	rcall	.+30     	; 0x6ae <__ultoa_invert+0x86>
 690:	c9 f7       	brne	.-14     	; 0x684 <__ultoa_invert+0x5c>
 692:	f6 cf       	rjmp	.-20     	; 0x680 <__ultoa_invert+0x58>
 694:	46 2f       	mov	r20, r22
 696:	4f 70       	andi	r20, 0x0F	; 15
 698:	40 5d       	subi	r20, 0xD0	; 208
 69a:	4a 33       	cpi	r20, 0x3A	; 58
 69c:	18 f0       	brcs	.+6      	; 0x6a4 <__ultoa_invert+0x7c>
 69e:	49 5d       	subi	r20, 0xD9	; 217
 6a0:	31 fd       	sbrc	r19, 1
 6a2:	40 52       	subi	r20, 0x20	; 32
 6a4:	41 93       	st	Z+, r20
 6a6:	02 d0       	rcall	.+4      	; 0x6ac <__ultoa_invert+0x84>
 6a8:	a9 f7       	brne	.-22     	; 0x694 <__ultoa_invert+0x6c>
 6aa:	ea cf       	rjmp	.-44     	; 0x680 <__ultoa_invert+0x58>
 6ac:	b4 e0       	ldi	r27, 0x04	; 4
 6ae:	a6 95       	lsr	r26
 6b0:	97 95       	ror	r25
 6b2:	87 95       	ror	r24
 6b4:	77 95       	ror	r23
 6b6:	67 95       	ror	r22
 6b8:	ba 95       	dec	r27
 6ba:	c9 f7       	brne	.-14     	; 0x6ae <__ultoa_invert+0x86>
 6bc:	00 97       	sbiw	r24, 0x00	; 0
 6be:	61 05       	cpc	r22, r1
 6c0:	71 05       	cpc	r23, r1
 6c2:	08 95       	ret
 6c4:	9b 01       	movw	r18, r22
 6c6:	ac 01       	movw	r20, r24
 6c8:	0a 2e       	mov	r0, r26
 6ca:	06 94       	lsr	r0
 6cc:	57 95       	ror	r21
 6ce:	47 95       	ror	r20
 6d0:	37 95       	ror	r19
 6d2:	27 95       	ror	r18
 6d4:	ba 95       	dec	r27
 6d6:	c9 f7       	brne	.-14     	; 0x6ca <__ultoa_invert+0xa2>
 6d8:	62 0f       	add	r22, r18
 6da:	73 1f       	adc	r23, r19
 6dc:	84 1f       	adc	r24, r20
 6de:	95 1f       	adc	r25, r21
 6e0:	a0 1d       	adc	r26, r0
 6e2:	08 95       	ret

000006e4 <__prologue_saves__>:
 6e4:	2f 92       	push	r2
 6e6:	3f 92       	push	r3
 6e8:	4f 92       	push	r4
 6ea:	5f 92       	push	r5
 6ec:	6f 92       	push	r6
 6ee:	7f 92       	push	r7
 6f0:	8f 92       	push	r8
 6f2:	9f 92       	push	r9
 6f4:	af 92       	push	r10
 6f6:	bf 92       	push	r11
 6f8:	cf 92       	push	r12
 6fa:	df 92       	push	r13
 6fc:	ef 92       	push	r14
 6fe:	ff 92       	push	r15
 700:	0f 93       	push	r16
 702:	1f 93       	push	r17
 704:	cf 93       	push	r28
 706:	df 93       	push	r29
 708:	cd b7       	in	r28, 0x3d	; 61
 70a:	de b7       	in	r29, 0x3e	; 62
 70c:	ca 1b       	sub	r28, r26
 70e:	db 0b       	sbc	r29, r27
 710:	0f b6       	in	r0, 0x3f	; 63
 712:	f8 94       	cli
 714:	de bf       	out	0x3e, r29	; 62
 716:	0f be       	out	0x3f, r0	; 63
 718:	cd bf       	out	0x3d, r28	; 61
 71a:	09 94       	ijmp

0000071c <__epilogue_restores__>:
 71c:	2a 88       	ldd	r2, Y+18	; 0x12
 71e:	39 88       	ldd	r3, Y+17	; 0x11
 720:	48 88       	ldd	r4, Y+16	; 0x10
 722:	5f 84       	ldd	r5, Y+15	; 0x0f
 724:	6e 84       	ldd	r6, Y+14	; 0x0e
 726:	7d 84       	ldd	r7, Y+13	; 0x0d
 728:	8c 84       	ldd	r8, Y+12	; 0x0c
 72a:	9b 84       	ldd	r9, Y+11	; 0x0b
 72c:	aa 84       	ldd	r10, Y+10	; 0x0a
 72e:	b9 84       	ldd	r11, Y+9	; 0x09
 730:	c8 84       	ldd	r12, Y+8	; 0x08
 732:	df 80       	ldd	r13, Y+7	; 0x07
 734:	ee 80       	ldd	r14, Y+6	; 0x06
 736:	fd 80       	ldd	r15, Y+5	; 0x05
 738:	0c 81       	ldd	r16, Y+4	; 0x04
 73a:	1b 81       	ldd	r17, Y+3	; 0x03
 73c:	aa 81       	ldd	r26, Y+2	; 0x02
 73e:	b9 81       	ldd	r27, Y+1	; 0x01
 740:	ce 0f       	add	r28, r30
 742:	d1 1d       	adc	r29, r1
 744:	0f b6       	in	r0, 0x3f	; 63
 746:	f8 94       	cli
 748:	de bf       	out	0x3e, r29	; 62
 74a:	0f be       	out	0x3f, r0	; 63
 74c:	cd bf       	out	0x3d, r28	; 61
 74e:	ed 01       	movw	r28, r26
 750:	08 95       	ret

00000752 <_exit>:
 752:	f8 94       	cli

00000754 <__stop_program>:
 754:	ff cf       	rjmp	.-2      	; 0x754 <__stop_program>
